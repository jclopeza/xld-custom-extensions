<?xml version='1.0' encoding='UTF-8'?>
<!--
Note: If you modify this file, you must restart the XL Deploy server.
-->
<synthetic xsi:schemaLocation="http://www.xebialabs.com/deployit/synthetic synthetic.xsd" xmlns="http://www.xebialabs.com/deployit/synthetic" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <!-- Extendemos de udm.BaseDeployableArtifact porque queremos adjuntar un archivo -->
    <type type="demo-os-script.Deployable" extends="udm.BaseDeployableArtifact">
        <property name="propertyDeployable"/>
        <!-- Para la siguient propiedad hace falta definir enum-class -->
        <!-- <property name="propertyDeployable_enum" kind="enum" required="false" category="Kind of variables"/> -->
        <property name="propertyDeployable_boolean" kind="boolean" required="false" category="Kinds of variables"/>
        <property name="propertyDeployable_integer" kind="integer" required="false" category="Kinds of variables"/>
        <property name="propertyDeployable_string" kind="string" required="false" category="Kinds of variables"/>
        <property name="propertyDeployable_set_of_string" kind="set_of_string" required="false" category="Kinds of variables"/>
        <property name="propertyDeployable_list_of_string" kind="list_of_string" required="false" category="Kinds of variables"/>
        <property name="propertyDeployable_map_string_string" kind="map_string_string" required="false" category="Kinds of variables"/>
        <!-- Para las siguientes propiedades es obligatorio definir el atributo referenced-type -->
        <property name="propertyDeployable_ci" kind="ci" referenced-type="udm.Application" required="false" category="Kinds of variables"/>
        <property name="propertyDeployable_set_of_ci" kind="set_of_ci" referenced-type="udm.Application" required="false" category="Kinds of variables"/>
        <property name="propertyDeployable_list_of_ci" kind="list_of_ci" referenced-type="udm.Application" required="false" category="Kinds of variables"/>
    </type>
    <!-- La primera linea indica que extendemos de un contenedor tipo host -->
    <type type="demo-os-script.Container" extends="udm.BaseContainer">
        <property name="host" kind="ci" referenced-type="overthere.Host" as-containment="true"/>
        <property name="propertyContainer"/>
    </type>
    <!-- El tipo udm.BaseDeployedArtifact hace que tengamos acceso, entre otras cosas a la propiedad deployed.file.path -->
    <type type="demo-os-script.Deployed" extends="udm.BaseDeployedArtifact" deployable-type="demo-os-script.Deployable" container-type="demo-os-script.Container">
        <property name="propertyDeployed" default="completed"/>
    </type>
    
    <!-- Ejemplo de copy-default-values -->
    <type type="demo-os-script.DeployedCopy" extends="udm.BaseDeployed" deployable-type="demo-os-script.DeployableCopy" container-type="demo-os-script.Container">
        <generate-deployable type="demo-os-script.DeployableCopy" extends="udm.BaseDeployable" copy-default-values="true"/>
        <property name="driverClassName" description="The fully qualified Java class name of the JDBC driver to be used." default="default1"/>
        <property name="url" description="The connection URL to be passed to our JDBC driver to establish a connection." default="default2"/>
    </type>

    <!-- Nuevo container para probar la opciÃ³n target-host -->
    <type type="demo-os-script.NestedContainer" extends="udm.BaseContainer">
        <property name="cluster" kind="ci" referenced-type="demo-os-script.Container" as-containment="true"/>
    </type>
    <type type="demo-os-script.NestedDeployed" extends="udm.BaseDeployed" deployable-type="demo-os-script.NestedDeployable" container-type="demo-os-script.NestedContainer">
        <generate-deployable type="demo-os-script.NestedDeployable" extends="udm.BaseDeployable" copy-default-values="true" />
        <property name="propertyNestedDeployed" default="completed"/>
    </type>
    
    <type type="carrefour.BigData" extends="udm.BaseDeployed" deployable-type="carrefour.BigDataSpec" container-type="overthere.Host">
        <generate-deployable  type="carrefour.BigDataSpec" extends="udm.BaseDeployable"/>
        <property name="shellScriptLocation" required="true" default="/opt/carrefour/bigdataScript.sh" hidden="true"/>
    </type>



    <!-- Ejemplo de uso de template -->
    <type type="lyhsoft.DeployedTemplate" extends="udm.BaseDeployedArtifact" deployable-type="lyhsoft.Template" container-type="overthere.Host">
        <generate-deployable  type="lyhsoft.Template" extends="udm.BaseDeployableArtifact"/>
        <property name="propInTemplate" required="true" default="prop in template"/>
    </type>

    <!--
    <type type="orange.SpaContainer" extends="udm.BaseContainer">
        <property name="host" kind="ci" referenced-type="overthere.Host" as-containment="true"/>
    </type>

    <type type="spa.Deployed" extends="udm.BaseDeployedArtifact" deployable-type="orange.Spa" container-type="orange.SpaContainer">
        <generate-deployable type="orange.Spa" extends="udm.BaseDeployableArtifact"/>
        <property name="targetPath"/>
    </type>
    -->
    <type type="orange.Helm" extends="udm.BaseDeployableArtifact">
    </type>
    <type type="orange.Spa" extends="udm.BaseDeployable">
        <property name="tecnologia"/>
        <property name="testUrl"/>
    </type>
    <type type="orange.SpaContainer" extends="udm.BaseContainer">
        <property name="host" kind="ci" referenced-type="overthere.Host" as-containment="true"/>
        <property name="hostToDeploy"/>
        <property name="folderToDeploy"/>
        <property name="environment"/>
        <property name="groups" kind="list_of_string" required="false"/>
        <property name="gitlab_token" password="true" required="true"/>
	    <property name="gitlab_user" required="true" default="jenkins-bot"/> 
	    <property name="gitlab_url" required="true" /> 
    </type>
    <type type="orange.SpaDeployed" extends="udm.BaseDeployed" deployable-type="orange.Spa" container-type="orange.SpaContainer">
    </type>

</synthetic>
